#!/bin/sh

set -e
exec </dev/null >&2

# Copy the kernel image, config, system map, and initramfs over to the netboot
# filesystem.

VERSION="$1"
NETBOOTDIR="/boot/netboot"

msg_err() {
	echo >&2 "E: cluster-netboot: $1"
	exit $2
}

msg_info() {
	echo >&2 "I: cluster-netboot: $1"
}

if ! [ -d "${NETBOOTDIR}" ]; then
	# Violating Debian kernel hook guidelines for bootloaders (sec 8.2 in the
	# Debian Linux Kernel Handbook) by exiting with a non-0 status when the
	# bootloader is "disabled". In this case, I *want* to be alerted that the
	# "bootloader" isn't being updated properly.
	msg_err "/boot/netboot is not mounted" 3
fi

if [ -z "${VERSION}" ]; then
	msg_err "No kernel version given" 2
fi

# Cribbed from the initramfs-tools postinst script.
# This avoids running the script mutliple times (see Debian Policy manual 
# section 6.5 for the various arguments a postrm script can be given).
if [ -n "$DEB_MAINT_PARAMS" ]; then
	# This will clobber the old script parameters, but that's alright as they're
	# already saved.
	eval set -- "$DEB_MAINT_PARAMS"
	if [ -z "$1" ] || [ "$1" != "configure" ]; then
		exit 0
	fi
fi

# Have to put the dpkg arch in here as Ubuntu uses a "generic" kernel for 32 and
# 64 bit ARM.
KERNELDIR="${NETBOOTDIR}/kernel-${VERSION}-${DPKG_MAINTSCRIPT_ARCH}"

mkdir -p "${KERNELDIR}"
# There's an optional second argument with a path to the kernel. If it's not
# given, the path is either /boot/vmlinuz-$VERSION or /boot/vmlinux-$VERSION
# For our arches, it's vmlinuz
if [ -z "$2" ]; then
	BOOTDIR="/boot"
	if [ -e "${BOOTDIR}/vmlinuz-${VERSION}" ]; then
		KERNELFILE="${BOOTDIR}/vmlinuz-${VERSION}"
	else
		msg_err "Unable to find kernel at ${BOOTDIR}/vmlinuz-${VERSION}" 4
	fi
else
	BOOTDIR="$(dirname $2)"
	KERNELFILE="$2"
fi
CONFIGFILE="${BOOTDIR}/config-${VERSION}"
MAPFILE="${BOOTDIR}/System.map-${VERSION}"
INITRAMFS="${BOOTDIR}/initrd.img-${VERSION}"

msg_info "Installing ${KERNELFILE} to ${KERNELDIR}/vmlinuz"
cp -f "${KERNELFILE}" "${KERNELDIR}/vmlinuz"
msg_info "Installing ${MAPFILE} to ${KERNELDIR}/System.map"
cp -f "${MAPFILE}" "${KERNELDIR}/System.map"
msg_info "Installing ${CONFIGFILE} to ${KERNELDIR}/config"
cp -f "${CONFIGFILE}" "${KERNELDIR}/config"
msg_info "Installing ${INITRAMFS} to ${KERNELDIR}/initrd.img"
cp -f "${INITRAMFS}" "${KERNELDIR}/initrd.img"

DEVICE_TREE_DIR="/usr/lib/linux-image-${VERSION}"
# Ubuntu uses a different directory for its device trees
if ! [ -d "$DEVICE_TREE_DIR" ]; then
	if [ -d "/usr/lib/firmware/${VERSION}/device-tree" ]; then
		DEVICE_TREE_DIR="/usr/lib/firmware/${VERSION}/device-tree"
	fi
fi

PATTERNS_DIR="cluster-netboot/dtb-patterns"
# I'm not sure why, but DPKG_MAINTSCRIPT_ARCH is "all"...
_CLUSTER_NETBOOT_ARCH="$(dpkg --print-architecture)"
DTBS_PATTERNS="/etc/${PATTERNS_DIR}/${_CLUSTER_NETBOOT_ARCH}"
if ! [ -f "$DTBS_PATTERNS" ]; then
	DTBS_PATTERNS="/usr/share/${PATTERNS_DIR}/${_CLUSTER_NETBOOT_ARCH}"
fi

rsync \
	--verbose \
	--archive \
	--no-relative \
	--copy-links \
	--checksum \
	--msgs2stderr \
	--include-from="$DTBS_PATTERNS" \
	"$DEVICE_TREE_DIR" \
	"$KERNELDIR"
