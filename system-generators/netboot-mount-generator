#!/bin/sh

set -e

# systemd mount generator for creating the boot-netboot.mount files based on
# the defaults configuration.

OUTPUT_DIR="$1"

# shell-ified version of basic/parse-util.c:parse_boolean() from the systemd
# sources.
parse_bool() {
	# Slight difference in operation: instead of -EINVAL (or negative values in
	# general), this function returns 255 for error conditions as POSIX "return"
	# doesn't support signed integers (or integers over 255).
	TRUE_VALUES="1 yes y true t on"
	FALSE_VALUES="0 no n false f off"
	OLDIFS="$IFS"
	IFS=" "
	for V in $TRUE_VALUES; do
		if [ "$V" = "$1" ]; then
			IFS="$OLDIFS"
			return 1
		fi
	done
	for V in $FALSE_VALUES; do
		if [ "$V" = "$1" ]; then
			IFS="$OLDIFS"
			return 0
		fi
	done
	# Unrecognized input
	IFS="$OLDIFS"
	return 255
}

# shell-ified version of basic/util.c:in_initrd() (and associated functions)
# from the systemd sources.
in_initrd() {
	# Rely on sudo to sanitize environment variables (as I don't want to
	# reimplement getenv_secure in shell script).
	ENV_IN_INITRD=$(parse_bool "$SYSTEMD_IN_INITRD")
	if [ $ENV_IN_INITRD -eq 255 ]; then
		# NOTE: *not* doing the extra check from in_initrd() (that it's a tmpfs)
		[ -f "/etc/initrd-release" ]
		return
	else
		return $ENV_IN_INITRD
	fi
}

if in_initrd; then
	# The systemd sources fall back to /sysroot, but the initramfs-tools manpage
	# says the future root is usually mounted at /root
	if [ -e /sysroot ]; then
		ROOT_MOUNTPOINT=/sysroot
	elif [ -e /root ]; then
		ROOT_MOUNTPOINT=/root
	fi
else
	ROOT_MOUNTPOINT=
fi
. "${ROOT_MOUNTPOINT}/usr/share/cluster-netboot/load-config.sh"
# This script **MUST** be run after the eventual root filesystem has been
# mounted (if running in initramfs).

NFS_SERVER="$(cluster_nfs_server_resolved "${ROOT_MOUNTPOINT}")"

cat >"${OUTPUT_DIR}/boot-netboot.mount" <<EOF
# Automatically generated by $(basename "$0")

[Unit]
Description=Add the (configured) /boot/netboot mount
SourcePath=${ROOT_MOUNTPOINT}/etc/defaults/cluster-netboot

[Mount]
Where=/boot/netboot
What=${NFS_SERVER}:${CLUSTER_NFS_NETBOOT_PATH}
Type=nfs
Options=defaults,ro
EOF