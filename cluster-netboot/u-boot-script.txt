# Boot functions common to all boards

# Additionally, the variable "boardbootargs" will be added to the kernel
# command line.

# These are common variables for setting which boot files to load.
setenv boot_prefix /current
setenv kernel_file vmlinuz
setenv initrd_file initrd.img

# loadnetenv will search for a uEnv.txt file to source from the TFTP root. First
# it tries "uEnv-${serial#}.txt", then "uEnv-${arch}.txt" (when $arch == "arm",
# "armhf" is used instead), and then finally "uEnv.txt". After the first
# file is found, searching stops.
# Whichever file is loaded, it must set the "boot_prefix" variable
# appropriately. See the generated "uEnv-${arch}.txt" files for an example.
setenv loadnetenv '
setenv autoload no;
setenv netscriptfound 0;
if tftp ${scriptaddr} "uEnv-${serial#}.txt"; then
  echo "Importing environment from uEnv-${serial#}.txt";
  setenv netscriptfound 1;
else
  if test "${arch}" -eq "arm"; then
    setenv uenv_arch armhf;
  else
    setenv uenv_arch "${arm}"
  fi;
  if tftp ${scriptaddr} "uEnv-${uenv_arch}.txt"; then
    echo "Importing environment from uEnv-${uenv_arch}.txt";
    setenv netscriptfound 1;
  else
    if tftp ${scriptaddr} "uEnv.txt"; then
      echo "Importing environment from uEnv.txt";
      setenv netscriptfound 1;
    fi;
  fi;
fi;
if test ${netscriptfound} -eq 1; then
  env import -t ${scriptaddr} ${filesize};
else
  echo "Not importing environment, using default values.";
fi;
'

# Loads the various images into the proper places.
# The size of the initrd will be stored in the "initrdsize" variable
# afterwards.
setenv netload '
setenv autoload no;
tftp ${kernel_addr_r} ${boot_prefix}/${kernel_file};
run loadfdt;
tftp ${ramdisk_addr_r} ${boot_prefix}/${initrd_file};
setenv initrdsize ${filesize};
'

# Extra kernel arguments not related to the root FS, console, cloud-init or the
# specific board executing this.
# the systemd.volatile=state flag has just /var mounted as a tmpfs
# To break in initramfs, add "break=bottom" (see initramfs-tools(7) for more
# details)
setenv extrabootargs "net.ifnames=0 fixrtc"

# Set the kernel arguments to boot over NFS
setenv netbootargs '
echo "Booting from NFS mountpoint [${rootpath}]";
setenv bootargs "root=/dev/nfs nfsroot=${rootpath} ip=dhcp rootwait ro console=${console} ${extrabootargs}";
if test -n ${boardbootargs}; then
    echo "Adding board-specific arguments";
    setenv bootargs "${bootargs} ${boardbootargs}";
fi;
echo "Kernel arguments [${bootargs}]";'

# Actually boot over the network.
setenv netboot '
setenv autoload no;
dhcp;
run loadnetenv;
run netload;
run netbootargs;
echo "Running: bootz ${kernel_addr_r} ${ramdisk_addr_r}:${initrdsize} ${fdtaddr}";
bootz ${kernel_addr_r} ${ramdisk_addr_r}:${initrdsize} ${fdtaddr};
'

run netboot