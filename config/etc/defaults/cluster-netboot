# vim: ft=shell

# Either the hostname or IP address of the NFS server. By defaulting to the
# empty string, the server IP from the DHCP server will be used.
#CLUSTER_NFS_SERVER=

# The base of the exported path for the cluster filesystems.
#CLUSTER_NFS_BASE_PATH=/mnt/cluster

# The date and domain name used for the iSCSI *initiator*. The default is
# "2020-12.com.paxswill.cluster-netboot", but it is encouraged that it be set to
# a site-specific value. See RFC 3720, section 3.2.6.3.1 for the formatting.
# This is *just* the date and domain portion, the "iqn." prefix, and a node
# specific suffix of ":node:${NODE_ID}" will be added. $NODE_ID is the MAC
# address of the primary Ethernet interface without colons, and all lowercase.
#CLUSTER_ISCSI_INITIATOR=2020-12.com.paxswill.cluster-netboot

# The date and domain for the iSCSI *target*. If not set, the value from
# CLUSTER_ISCSI_INITIATOR will be used. The same guidelines for that value also
# apply, the the suffix being "instance-data:${NODE_ID}" instead.
#CLUSTER_ISCSI_TARGET=

# The iSCSI server to use for mounting each node's /var. If left at the default
# (an empty string), the same value as CLUSTER_NFS_SERVER will be used. If
# CLUSTER_NFS_SERVER is also left at it's default value (also an empty string),
# the same hostname or IP address that was used to mount the root filesystem
# will be used (which is typically provided via DHCP).
#CLUSTER_ISCSI_SERVER=

# The exported path to the root filesystems. If not set, defaults to
# ${CLUSTER_NFS_BASE_PATH}/root
#CLUSTER_NFS_ROOT_PATH="${CLUSTER_NFS_BASE_PATH}/root"

# It is also possible to set specific paths for each architecture's root by
# setting the variable name "CLUSTER_NFS_ROOT_${ARCH}_PATH" with ARCH being one
# of "armhf" or "arm64" (uppercased). If not set, the values default to
# "${CLUSTER_NFS_ROOT_PATH}/${ARCH}".
#CLUSTER_NFS_ROOT_ARMHF_PATH="${CLUSTER_NFS_ROOT_PATH}/armhf"
#CLUSTER_NFS_ROOT_ARM64_PATH="${CLUSTER_NFS_ROOT_PATH}/arm64"

# The exported path tp the netboot root. If not set, defaults to
# ${CLUSTER_NFS_BASE_PATH}/netboot
#CLUSTER_NFS_NETBOOT_PATH="${CLUSTER_NFS_BASE_PATH}/netboot"

# The name of the U-Boot boot script defaults to "boot.scr".
# The path to the U-Boot boot script within the netboot root. Defaults to
# "boot.scr" (meaning at the root of the netboot share).
#CLUSTER_UBOOT_SCRIPT_NAME=boot.scr

# If you want to customize the U-Boot boot script, edit the file
# /etc/cluster-netboot/u-boot-script.txt and possibly
# /etc/cluster-netboot/combined-image.its as well. It is also possible to set
# options on a per-architecture and per-device basis by creating specially named
# uEnv.txt files in the root of the netboot directory. See the source of the
# boot script for details.

# Extra command line parameters for Rapberry Pis that can natively netboot.
# Defaults to the empty string.
#CLUSTER_RASPI_EXTRA_CMDLINE=""

# The kernel command line used for Raspberry Pis that can natively netboot.
# If not set, the default is "net.ifnames=0 console=ttyS0,115200n8 root=/dev/nfs
# nfsroot=${CLUSTER_NFS_ROOT_ARM64_PATH} ro ip=dhcp rootwait fixrtc panic=10
# ${CLUSTER_RASPI_EXTRA_CMDLINE}". If CLUSTER_NFS_SERVER is set to a non-empty
# string, it will be prepended to the value for "nfsroot" with a colon.
# 
# This allows a way to completely override the command line, instead of just
# adding some extra to it. If all you want to do is add some extra arguments,
# use CLUSTER_RASPI_EXTRA_CMDLINE.
#CLUSTER_RASPI_CMDLINE=

# If you want to customize config.txt for netbooting Raspberry Pis, modify the
# file /etc/cluster-netboot/raspi-config.txt.