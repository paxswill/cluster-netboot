# Boot functions common to all boards

# Additionally, the variable "boardbootargs" will be added to the kernel
# command line.

# These are common variables for setting which boot files to load.
setenv boot_prefix /current
setenv kernel_file vmlinuz
setenv initrd_file initrd.img

# loadnetenv will search for a uEnv.txt file to source from the TFTP root.
# It checks a series of files, loading them into the environment one after
# another. These files are: "uEnv.txt", "uEnv-${arch}.txt" (when
# $arch == "arm", "armhf" is used instead), "uEnv-${board}.txt", then
# "uEnv-${serial#}.txt". This lets general to more specific settings to be
# applied to different devices.
# The "uEnv-${arch}.txt" file is special in that it sets the "boot_prefix"
# variable and is automatically rewritten when new kernels are installed.
setenv loadnetenv '
setenv autoload no;
if tftp ${scriptaddr} "uEnv.txt"; then
  echo "Importing environment from uEnv.txt";
  env import -t ${scriptaddr} ${filesize};
fi;
if test "${arch}" -eq "arm"; then
  setenv uenv_arch armhf;
else
  setenv uenv_arch "${arm}"
fi;
if tftp ${scriptaddr} "uEnv-${uenv_arch}.txt"; then
  echo "Importing environment from uEnv-${uenv_arch}.txt";
  env import -t ${scriptaddr} ${filesize};
fi;
if tftp ${scriptaddr} "uEnv-${board}.txt"; then
  echo "Importing environment from uEnv-${board}.txt";
  env import -t ${scriptaddr} ${filesize};
fi;
if tftp ${scriptaddr} "uEnv-${serial#}.txt"; then
  echo "Importing environment from uEnv-${serial#}.txt";
  env import -t ${scriptaddr} ${filesize};
fi;
'

# findfdt is part of the standard BeagleBone U-Boot environment.
# For other boards...welp.
# After running findfdt, $fdtfile is the path with "dtb" prefixed, like so:
# dtb/am335x-boneblack.dtb
setenv loadfdt '
if test -n "${findfdt}"; then
  run findfdt;
fi;
echo "Loading device tree over TFTP...";
if tftp ${fdt_addr_r} ${boot_prefix}/${fdtfile}; then
  setenv fdtaddr ${fdt_addr_r};
else
  if tftp ${fdt_addr_r} ${boot_prefix}/dtb/${fdtfile}; then
    setenv fdtaddr ${fdt_addr_r};
  fi;
fi;
'

# Loads the various images into the proper places.
# The size of the initrd will be stored in the "initrdsize" variable
# afterwards.
setenv netload '
setenv autoload no;
echo "Loading kernel image [${boot_prefix}/${kernel_file}] over TFTP...";
tftp ${kernel_addr_r} ${boot_prefix}/${kernel_file};
run loadfdt;
echo "Loading initrd [${boot_prefix}/${initrd_file}] over TFTP...";
tftp ${ramdisk_addr_r} ${boot_prefix}/${initrd_file};
setenv initrdsize ${filesize};
'

# Extra kernel arguments not related to the root FS, console, cloud-init or the
# specific board executing this.
# the systemd.volatile=state flag has just /var mounted as a tmpfs
# To break in initramfs, add "break=bottom" (see initramfs-tools(7) for more
# details)
setenv extrabootargs "net.ifnames=0 fixrtc"

# Set the kernel arguments to boot over NFS
setenv netbootargs '
echo "Booting from NFS mountpoint [${rootpath}]";
setenv bootargs "root=/dev/nfs nfsroot=${rootpath} ip=dhcp rootwait ro console=${console} ${extrabootargs}";
if test -n ${boardbootargs}; then
    echo "Adding board-specific arguments [${boardbootargs}]";
    setenv bootargs "${bootargs} ${boardbootargs}";
fi;
echo "Kernel arguments [${bootargs}]";'

# Actually boot over the network.
setenv netboot '
setenv autoload no;
dhcp;
run loadnetenv;
run netload;
run netbootargs;
echo "Running: bootz ${kernel_addr_r} ${ramdisk_addr_r}:${initrdsize} ${fdtaddr}";
bootz ${kernel_addr_r} ${ramdisk_addr_r}:${initrdsize} ${fdtaddr};
'

run netboot