#!/bin/sh

set -e

MODEL_PATH=/proc/device-tree/model
SERIAL_NUMBER_PATH=/proc/device-tree/serial-number

strip_null() {
	sed 's/\(.*\)\x0/\1/' $1
}

# sed expressions converting a model name to a prefix
# NOTE: this command has to be able to run under Busybox, so no lowercasing
# extensions to sed are available.
RPI_PREFIX='s/Raspberry Pi \([[:digit:]]\) Model \([^[:space:]]\+\) Rev.*/rpi\1\2/'
BB_PREFIX='s/TI AM335x BeagleBone \([^[:space:]]\)[^[:space:]]\+.*$/bb\1/'

get_prefix() {
	UNAME="$(uname -m)"
	case "$UNAME" in
	arm*|aarch64)
		prefix="$(strip_null ${MODEL_PATH} | \
			sed "${RPI_PREFIX}" | \
			sed "${BB_PREFIX}" | \
			tr A-Z a-z)"
		(
			case "$prefix" in
			rpi*|bb*)
				printf "%s" "$prefix"
				;;
			*)
				printf "unknown"
				;;
			esac
		)
		;;
	*)
		printf "%s" "$UNAME"
		;;
	esac
}

read_mac() {
	if [ "$1" = "" ]; then
		# Find an interface to use
		if [ -e /sys/class/net/eth0 ]; then
			NET_IF=eth0
		else
			NET_IFS="(echo /sys/class/net/* | sort)"
			for IF in "$NET_IFS"; do
				REAL_IF="$(readlink -f "$IF" || echo "")"
				if [ -d "$REAL_IF" ] && [ "$(cat "$REAL_IF")" = "up" ]; then
					NET_IF="$IF"
					break;
				fi
			done
		fi
	else
		NET_IF="$1"
	fi
	<"/sys/class/net/${NET_IF}/address" tr -d ":" | tr 'A-Z' 'a-z'
}

# There are two options for this function: Either return the serial number, or
# the MAC address of the primary network interface. With no option given, the
# primary network interface is used. If the argument "serial" is given, the
# serial number is used. If an interface name is given, the MAC address of that
# interface is used.
get_id() {
	case "$1" in
	serial)
		strip_null "${SERIAL_NUMBER_PATH}" | tr 'A-Z' 'a-z';;
	"")
		read_mac;;
	*)
		read_mac "$1";;
	esac
}

generate_id() {
	printf "%s-%s" "$(get_prefix)" "$(get_id ${1})"
}

LAST_ARG_MAC=n
for ARG in $@; do
	case "$ARG" in
	-s|--serial)
		if [ -n "$ID_KIND" ]; then
			echo "Only one of either --mac and --serial are allowed"
			exit 1
		else
			ID_KIND=serial
		fi
		LAST_ARG_MAC=n
		;;
	-m|--mac)
		if [ -n "$ID_KIND" ]; then
			echo "Only one of either --mac and --serial are allowed"
			exit 1
		else
			ID_KIND=mac
			LAST_ARG_MAC=y
		fi
		;;
	-p|--pretty)
		if [ -n "$ADD_PREFIX" ]; then
			echo "Only one of either --pretty or --no-pretty are allowed"
		else
			ADD_PREFIX=y
		fi
		LAST_ARG_MAC=n
		;;
	-P|--no-pretty)
		if [ -n "$ADD_PREFIX" ]; then
			echo "Only one of either --pretty or --no-pretty are allowed"
		else
			ADD_PREFIX=n
		fi
		LAST_ARG_MAC=n
		;;
	-h|--help)
		echo "Usage: ${BASE_COMMAND} [OPTION]"
		echo
		if [ "$BASE_COMMAND" = "generate-cluster-id" ]; then
			echo "Print a unique, stable identifier for this node."
		else
			echo "Set the hostname of this node to a unique, stable identifier."
		fi
		echo "\
  -s, --serial           Use the device serial number for the unique ID"
		echo "\
  -m, --mac [interface]  Use an interface's MAC address for the unique ID"
		echo "\
  -p, --pretty           Add a nice prefix to the ID"
		echo "\
  -P, --no-pretty        Explicitly disable --pretty"
		echo "\
  -h, --help             Display this help"
		echo "\
--serial and --mac are mutually exclusive, as are --pretty and --no-pretty"
		(
			case "$BASE_COMMAND" in
			generate-cluster-id)
				echo "The default options are '--mac --no-pretty'"
				;;
			set-cluster-node-hostname)
				echo "The default options are '--mac --pretty'"
				;;
			esac
		)
		exit 0
		;;
	*)
		if [ "$LAST_ARG_MAC" = "y" ]; then
			ID_KIND="${ARG}"
		else
			echo "Unknown argument '${ARG}'"
			exit 1
		fi
		LAST_ARG_MAC=n
		;;
	esac
done

# When not given a specific network interface, use the default (well, "a"
# default), signified by an empty string
if [ "$ID_KIND" = "mac" ]; then
	ID_KIND=
fi
UNIQUE_ID="$(get_id $ID_KIND)"

# NOTE: the cases in here differ by a single character, the default value of
# ADD_PREFIX.
BASE_COMMAND="$(basename $0)"
case "$BASE_COMMAND" in
generate-cluster-id)
	if [ "${ADD_PREFIX:-n}" = "y" ]; then
		UNIQUE_ID="$(get_prefix)-${UNIQUE_ID}"
	fi
	echo "$UNIQUE_ID"
	;;
set-cluster-node-hostname)
	if [ "${ADD_PREFIX:-y}" = "y" ]; then
		UNIQUE_ID="$(get_prefix)-${UNIQUE_ID}"
	fi
	hostname "$UNIQUE_ID"
	;;
esac